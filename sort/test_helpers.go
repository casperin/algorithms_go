package sort

import (
	"sort"
	"testing"
)

type Test struct {
	name string
	list []int
}

var many_lists = []Test{
	{"simple", []int{4, 3, 1, 6, 32, 3}},
	{"Empty", []int{}},
	{"One element", []int{42}},
	{"Two elements, sorted", []int{1, 2}},
	{"Two elements, unsorted", []int{2, 1}},
	{"Reversed", []int{10, 8, 6, 5, 3, 1}},
	{
		"30 numbers 0 < x < 100",
		[]int{
			32, 35, 75, 17, 12, 93, 37, 67, 16, 22, 47, 93, 43, 90, 57, 23, 89, 32, 16, 98,
			40, 73, 42, 64, 46, 85, 4, 25, 30, 57,
		},
	},
	{
		"500 numbers 0 < x < 100",
		[]int{
			15, 21, 35, 53, 9, 85, 44, 21, 82, 85, 48, 56, 70, 10, 39, 61, 68, 37, 0, 20, 91,
			1, 43, 38, 72, 91, 96, 51, 29, 68, 56, 28, 22, 65, 57, 23, 29, 87, 94, 23, 56, 80,
			95, 18, 75, 27, 82, 87, 54, 72, 23, 91, 37, 73, 12, 61, 1, 63, 77, 12, 65, 82, 71,
			73, 51, 10, 56, 33, 54, 26, 66, 47, 6, 43, 43, 14, 18, 37, 66, 89, 12, 86, 32, 29,
			66, 37, 50, 55, 27, 52, 4, 91, 57, 8, 34, 78, 53, 54, 10, 75, 3, 30, 21, 73, 70,
			29, 65, 73, 42, 39, 48, 5, 52, 76, 75, 27, 40, 31, 13, 81, 91, 38, 77, 93, 87, 2,
			25, 37, 44, 75, 23, 63, 88, 20, 61, 75, 91, 29, 60, 5, 99, 41, 70, 11, 18, 95, 66,
			59, 0, 84, 15, 12, 16, 83, 87, 29, 6, 76, 32, 36, 59, 90, 60, 22, 60, 95, 87, 37,
			9, 66, 4, 59, 98, 59, 93, 35, 2, 44, 67, 43, 27, 52, 14, 74, 13, 32, 33, 61, 7, 32,
			83, 54, 90, 72, 18, 94, 57, 21, 26, 20, 5, 53, 93, 44, 78, 61, 94, 35, 23, 50, 14,
			34, 95, 31, 43, 0, 4, 80, 60, 73, 47, 66, 61, 76, 47, 47, 77, 6, 10, 33, 65, 45,
			49, 80, 37, 33, 80, 21, 29, 72, 43, 89, 6, 26, 37, 36, 59, 56, 34, 33, 77, 38, 38,
			47, 45, 19, 92, 78, 18, 94, 38, 3, 81, 89, 0, 16, 0, 61, 96, 76, 27, 56, 4, 84, 45,
			85, 76, 49, 82, 57, 73, 7, 41, 19, 97, 29, 34, 27, 68, 7, 26, 82, 39, 35, 88, 10,
			49, 26, 52, 31, 85, 69, 1, 49, 37, 75, 16, 40, 77, 66, 10, 41, 39, 90, 14, 2, 61,
			44, 88, 47, 66, 76, 13, 22, 5, 53, 99, 62, 36, 4, 76, 62, 63, 78, 92, 33, 25, 38,
			44, 6, 61, 19, 83, 81, 79, 44, 13, 6, 69, 85, 80, 85, 21, 83, 53, 31, 88, 26, 0,
			67, 15, 1, 63, 46, 66, 60, 93, 88, 73, 60, 74, 10, 69, 24, 39, 56, 39, 78, 28, 90,
			42, 0, 97, 76, 56, 75, 96, 9, 75, 24, 69, 39, 92, 64, 0, 35, 98, 53, 81, 68, 5, 52,
			34, 98, 54, 75, 92, 8, 65, 0, 93, 55, 86, 16, 73, 58, 60, 20, 25, 69, 65, 23, 29,
			36, 27, 44, 65, 3, 8, 20, 31, 89, 80, 52, 26, 48, 10, 14, 53, 79, 8, 95, 85, 18,
			70, 82, 83, 51, 59, 77, 49, 44, 10, 36, 14, 45, 80, 68, 49, 9, 54, 51, 50, 27, 60,
			44, 23, 17, 68, 13, 65, 1, 10, 67, 13, 67, 69, 63, 47, 37, 61, 17, 97, 19, 81, 22,
			57, 40, 9, 9, 10, 65, 25, 18, 46, 91, 36, 2, 56, 32,
		},
	},
}

func clone(test Test) Test {
	var list = make([]int, len(test.list))
	for i, n := range test.list {
		list[i] = n
	}
	return Test{test.name, list}
}

func listMustBeSorted(t *testing.T, test Test) {
	t.Helper()

	if len(test.list) == 0 {
		return
	}

	for i, n := range test.list {
		if i == 0 {
			continue
		}

		if n < test.list[i-1] {
			arr1 := []int{}
			arr2 := []int{}
			for _, tst := range many_lists {
				if tst.name == test.name {
					arr1 = clone(tst).list
					arr2 = clone(tst).list
					break
				}
			}
			sort.Ints(arr2)

			t.Fatalf(
				"\"%s\" failed at index %d, where it got %d, but the previous value was %d. The whole list: \n%v (input)\n%v (output)\n%v (expected)",
				test.name,
				i,
				test.list[i],
				test.list[i-1],
				arr1,
				test.list,
				arr2,
			)
		}
	}
}
